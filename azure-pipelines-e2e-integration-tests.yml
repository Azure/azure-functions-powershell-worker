# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr: none
trigger: none

strategy:
  matrix:
    linux:
      imageName: 'MMSUbuntu20.04TLS'
    windows:
      imageName: 'MMS2019TLS'

pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals $(imageName)

steps:
- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'Simple Batch(0b894477-1614-4c8d-8a9b-a697a24596b8)'
    KeyVaultName: 'powershell-worker'
    SecretsFilter: '*'
    RunAsPreJob: true
- pwsh: |
    Import-Module "./tools/helper.psm1" -Force
    Install-Dotnet
  displayName: 'Install .NET 6.0'

- pwsh: ./test/E2E/Start-E2ETest.ps1 -UseCoreToolsBuildFromIntegrationTests
  env:
    AzureWebJobsStorage: $(AzureWebJobsStorage)
    AzureWebJobsCosmosDBConnectionString: $(AzureWebJobsCosmosDBConnectionString)
    AzureWebJobsServiceBus: $(AzureWebJobsServiceBus)
    AzureWebJobsEventHubSender: $(AzureWebJobsEventHubSender)
    FUNCTIONS_WORKER_RUNTIME : "powershell"
  displayName: 'Running PowerShell language worker E2E Tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()
