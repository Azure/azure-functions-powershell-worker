// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FunctionRpc.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Microsoft.Azure.WebJobs.Script.Grpc.Messages {
  /// <summary>
  /// Interface exported by the server.
  /// </summary>
  public static partial class FunctionRpc
  {
    static readonly string __ServiceName = "AzureFunctionsRpcMessages.FunctionRpc";

    static readonly grpc::Marshaller<global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage> __Marshaller_StreamingMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage, global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage> __Method_EventStream = new grpc::Method<global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage, global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "EventStream",
        __Marshaller_StreamingMessage,
        __Marshaller_StreamingMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.FunctionRpcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FunctionRpc</summary>
    public abstract partial class FunctionRpcBase
    {
      public virtual global::System.Threading.Tasks.Task EventStream(grpc::IAsyncStreamReader<global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage> requestStream, grpc::IServerStreamWriter<global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for FunctionRpc</summary>
    public partial class FunctionRpcClient : grpc::ClientBase<FunctionRpcClient>
    {
      /// <summary>Creates a new client for FunctionRpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FunctionRpcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FunctionRpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FunctionRpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FunctionRpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FunctionRpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncDuplexStreamingCall<global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage, global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage> EventStream(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EventStream(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage, global::Microsoft.Azure.WebJobs.Script.Grpc.Messages.StreamingMessage> EventStream(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_EventStream, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FunctionRpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FunctionRpcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(FunctionRpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_EventStream, serviceImpl.EventStream).Build();
    }

  }
}
#endregion
